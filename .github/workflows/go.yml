name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        cd vault
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
        mkdir -p bin

    - name: Build
      run: cd vault && go build -o bin/server -v server/grpcServer.go

    - name: Test
      run: cd vault && go test -v .
    
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
      # Artifact name
        name: server
      # A file, directory or wildcard pattern that describes what to upload
        path: /home/runner/work/kubernetes-vault-kms-plugin/kubernetes-vault-kms-plugin/vault/bin/server

    - name: Create a Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # The name of the tag. This should come from the webhook payload, `github.GITHUB_REF` when a user pushes a new tag
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}

    - name: Upload a Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
     # The URL for uploading assets to the release
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        # The path to the asset you want to upload
        asset_path: /home/runner/work/kubernetes-vault-kms-plugin/kubernetes-vault-kms-plugin/vault/bin/server
        # The name of the asset you want to upload
        asset_name: server
        # The content-type of the asset you want to upload. See the supported Media Types here: https://www.iana.org/assignments/media-types/media-types.xhtml for more information
        asset_content_type: application/binary
